#!/bin/bash
# Based on Docker gist https://gist.github.com/pirate/265e19a8a768a48cf12834ec87fb0eed of Github User "pirate" (Nick Sweeting)

# Fully backup a docker-compose project, including all images, named and unnamed volumes, container filesystems, config, logs, and databases. 

backup() {
    project_dir=$1
    env_file_param=$2
    env_file=$3

    cd "$project_dir"

    project_name=$(basename "$project_dir")
    backup_time=$(date +"%Y-%m-%d_%H-%M")
    backup_dir=""
    if [ -z $env_file ]; then backup_dir="backups/$backup_time"; else backup_dir="backups/$env_file/$backup_time"; fi
    

    # Optionally pause the containers
    docker-compose $env_file_param pause


    echo "[+] Backing up $project_name project to $backup_dir"
    mkdir -p "$backup_dir"

    echo "    - Saving config to ./docker-compose.yml"
    docker-compose $env_file_param config > "$backup_dir/docker-compose.yml" || exit 1


    # save database dump files
    echo "    - Saving database dumps to ./dumps"
    mkdir -p "$backup_dir/dumps"
    # your database/stateful service export commands go here, e.g.
    # docker-compose exec postgresql env PGPASSWORD="$POSTGRES_PASSWORD" pg_dump -U "$POSTGRES_USER" "$POSTGRES_DB" | gzip -9 > "$backup_dir/dumps/$POSTGRES_DB.sql.gz"

    for service_name in $(docker-compose $env_file_param config --services); do
        container_id=$(docker-compose $env_file_param ps -q "$service_name")
        image_name=$(docker inspect -f "{{ .Config.Image }}" "$container_id")
        image_id=$(docker image ls -q "$image_name")

        service_dir="$backup_dir/$service_name"
        echo "[*] Backing up ${project_name}__${service_name} to ./$service_name..."
        mkdir -p "$service_dir"

        # save config
        echo "    - Saving config to ./$service_name/config.json"
        docker inspect "$container_id" > "$service_dir/config.json"

        # save logs
        echo "    - Saving logs to ./$service_name/docker.out/err"
        docker logs "$container_id" > "$service_dir/docker.out" 2> "$service_dir/docker.err"

        # save data volumes
        mkdir -p "$service_dir/volumes"
        for source in $(docker inspect -f '{{range .Mounts}}{{println .Source}}{{end}}' "$container_id"); do
            volume_dir="$service_dir/volumes$source"
            echo "    - Saving $source volume to ./$service_name/volumes$source"
            mkdir -p $(dirname "$volume_dir")
            cp -a -r "$source" "$volume_dir"
        done

    done

    echo "[*] Compressing backup folder to $backup_dir.tar.gz"
    tar -zcf "$backup_dir.tar.gz" --totals "$backup_dir" && rm -Rf "$backup_dir"

    echo "[âˆš] Finished Backing up $project_name to $backup_dir.tar.gz."

    # Resume the containers if paused above
    docker-compose $env_file_param unpause
    cd ..
}

backup "nginx"
for f in ilias/env*
do
    echo "Backing up docker-compose project with env_file $f"
    backup "ilias" "--env-file $(basename $f)" "$(basename $f)"
done
