#!/usr/bin/python3
import shutil
import os
import math
import string
import random
import sys
r = random.SystemRandom()


def generate_password(pass_len=20):
    """Generates a password with the given length (see https://stackoverflow.com/questions/3854692/generate-password-in-python)
    """
    #TODO Generating more complex passwords for MySQL is currently not working
    symbols = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklymnopqrstuvwxyz0123456789'
    return ''.join(r.choice(symbols) for _ in range(pass_len))


def replace_in_file(src_file_name, dest_file_name, replace_patterns):
    """Replaces the patterns from the list in the given src file and outputs the result to dest_file_name
    """
    fin = open(src_file_name, "rt")
    fout = open(dest_file_name, "wt")

    for line in fin:
        for key_value_dict in replace_patterns:
            line = line.replace(
                key_value_dict['key'], key_value_dict['value'])
        fout.write(line)

    fin.close()
    fout.close()


def generate_nginx_configuration(email):
    """Generates the nginx env file to proxy docker containers and handle letsencrypt certificates
    """
    print('Nginx-proxy configuration is being generated')
    nginx_email_variable = '$$EMAIL$$'
    nginx_env_template = 'nginx/nginx_proxy_env_template'
    nginx_env = 'nginx/.nginx_proxy_env'

    replace_patterns = [
        {'key': nginx_email_variable, 'value': email},
    ]
    replace_in_file(nginx_env_template, nginx_env, replace_patterns)
    print('Nginx-proxy configuration ready')


def generate_ilias_configuration(ilias_hostnames):
    print('Ilias configuration is being generated')
    ilias_database_variable = '$$ILIAS_DB_PASSWORD$$'
    ilias_hostname_variable = '$$ILIAS_HOST_NAME$$'
    ilias_env_template = 'ilias/ilias_env_template'

    for ilias_hostname in ilias_hostnames:
        ilias_env = 'ilias/.ilias_env_' + ilias_hostname

        mysql_password = generate_password(20)
        replace_patterns = [
            {'key': ilias_database_variable, 'value': mysql_password},
            {'key': ilias_hostname_variable, 'value': ilias_hostname}
        ]

        replace_in_file(ilias_env_template, ilias_env, replace_patterns)

        print(ilias_hostname + ' Mysql root password: "' + mysql_password + '"')
    print('Ilias configuration ready.')

def request_configuration():
    """Allows the administrator to define necessary configuration options to start the elearning environment
    """
    admin_email = None
    print('Enter an email address that will be used for letsencrypt (will receive warnings if certificates expire)')
    admin_email = input()

    ilias_domains = []
    print('Enter all Ilias instance\'s hostnames (one host name per line, for example ilias.my-school.com, ilias.my-school.provider.com, etc.)')
    for ilias_domain in sys.stdin:
        if ilias_domain == '\n':
            break
        else:
            ilias_domains.append(ilias_domain.strip())
    print(ilias_domains)

    print('Admin email: ' + admin_email)
    print('Configuration will be generated for the following domains:')
    print('Ilias:')
    print(ilias_domains)

    print('Is that correct? (Y/N)')
    answer = input()
    if answer is not None and answer.strip().upper() == 'Y':
        generate_nginx_configuration(admin_email)
        generate_ilias_configuration(ilias_domains)
    else:
        print('You cancelled. Please try again.')

if __name__ == "__main__":
    request_configuration()
